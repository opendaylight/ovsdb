{
  "comments": [
    {
      "key": {
        "uuid": "fa82b9bf_385b1656",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "General comment - the patch lacks any unitests (why?) \n\nhow is this code tested now, and how it will be tested against regressions over time automatically ? whenever someone will change some code - how without unitests will we know that the code functions correctly?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f87daeb2",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "unused import?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_188972ca",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "What do the 2 above represent? What is the difference between \nbridgeMappingsConfigName and bridgeMappings?\nWhat is in particular \"bridgeMappings\" represent? It\u0027s a string, not a map, and it\u0027s in plural - what kind of mapping and in which format is it?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_53dd9b41",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "This response applies to many of the comments in this file.\n\nThis module is used to get all the config info for ovsdb. Some of that config comes from the odl config.ini and some from ovsdb.\n\nconfigName usually refers to the tag name for the value which would then be stored in the bridgeMappings.\n\nbridgeMappings is the name use by Openstack to map a bridge to a physical device.\n\nSo this file will attempt to read values from config, if not found, supply default values and also pull values from ovsdb.\n\nYour next comment about what the comment means describes most of these variables.",
      "parentUuid": "fa82b9bf_188972ca",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_3886b6ba",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "What does this comment mean? (looks like before your patch, but worth to check)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f88feeca",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Regarding all the constants below (I know this patch just adds some and not all)...\n\n1. It will be best to read those from a conf file, not hardcoded in code.\n\n2. A lot of words repeat themselves, harder to maintain and change when needed, increases risk for typos. It will be better to define separate constants for those words and then construct the other constants with them. For example - \"patch\", \"bridge\", \"eth1\".",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_3809d631",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "am not too comfortable to have such default values / assumptions at this layer. The only \"DEFAULTS\" that is declared here are the generic entities which will have no impact one way or the other on the deployment. But having \"eth1\" declared in the default section kinda get into the specifics of deployment and hence cannot be considered as default. I see this is something similar to the \"local_ip\" configuration for which we have no default (because having an local_ip ip-address as default doesnt make much sense due to the deployment considerations).\n\nSo, Can you please consider removing the above 2 deafults that are specific to a deployment ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f3162ff1",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "The idea was that if nothing was configured then these defaults would be used. Seems like openstack and devstack both have this idea. That idea is used in places in this file, br-int, patch-int. local_ip you could do the same but it is more difficult to derive a value. The eth interface and mapping sit in-between these two sets.\n\nEasy to remove. I guess the code just spits out exceptions since there are no values.",
      "parentUuid": "fa82b9bf_3809d631",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_98bca26e",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Please consider renaming CONFIG_BRIDGE_MAPPINGS_CONFIG - the constant itself contains \"config\" twice in its name, it\u0027s hard to understand it.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d8922af6",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "the value is the same as for DEFAULT_BRIDGE_MAPPINGS_CONFIG_STRING?\n(\"bridge_mappings\")\nAlso, it\u0027s not clear (at least to me) what are all the \"bridge_mappings\" strings representing - see my additional comment above regarding it (first comment in this file). When reading a constant it\u0027s important to understand whether it represents a path to some file, a name (term) , etc.\n\"bridge_mappings_config_string\" is not clear what it is.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_58b61a8c",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Is this thread safe? When is this class initialized and by how many threads?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d8054a15",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Same as the above comment.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b8c166e6",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Please use brackets (curlys {}) after if statements - it\u0027s easier to read.\nAnd please put the code that comes after \"if\" in a newline.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b3d8a754",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "agreed. This code style is used all over so I kept it. This can be changed in another commit to keep the changes separate.",
      "parentUuid": "fa82b9bf_b8c166e6",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f8028e0a",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Same comment as above.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d880ea8d",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "please put the return statement in a newline - more Java standard.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_93ffa301",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Based on the above comments, should we remove this member variable ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_93d32338",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "yes, thsi can go away if we don\u0027t care about the default. bridge_mappings can also cover this.",
      "parentUuid": "fa82b9bf_93ffa301",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_984a6282",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "I didn\u0027t see in the method anything that has to do with neutron - can you please explain where/how/why it relates to neutron, perhaps I missed it?\nthanks",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_18b0928a",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Please give the method a more clear name - I would turn \"phy\" into \"physical\" for example.\nBecause if you take the javadoc out, it\u0027s not clear that it relates to neutron at all.\n\nAnd also the parameter \"node\" should have a more clear name too.\nIt\u0027s type is Node, but the name should be more clear what this node represents.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_38ad5632",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "perhaps rename phyIf --\u003e physicalInterfaceName?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_53091b2b",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Better to be initialized to null \u0026 not even use a default value for deployment specific physical interface.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f8a60e53",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "worth to document in javadoc this behavior - in which case null is returned.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_387476ce",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 187,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "I know that \"getOther_config\" is not added in this patch.\nBut I have to say it - this is really not a proper Java naming convention. \nBoth the underscore and the lowercase \"config\" instead of camel case...",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_9863421a",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Why continue is needed here? (you wrote that there\u0027s only one value in this map)\nor perhaps it should have been \"break\" ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_187732d6",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 200,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "How often is this method called?\nAll the \"splits\" can have some cost if done too often.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_586dba03",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "is equals needed or equalsIgnoreCase? (in other words - is this case sensitive ?)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b3042716",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "is this case-sensitive, if not, can u consider using equalsIgnoreCase ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_73e21f05",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "the value is case-sensitive",
      "parentUuid": "fa82b9bf_586dba03",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_13e71314",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "the value is case-sensitive",
      "parentUuid": "fa82b9bf_b3042716",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_7872fee6",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 203,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "phyIf is initialized in the beginning of the method, and here it is overriden - is this OK?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_33e4970c",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 203,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "default above is to ensure that a value is returned. If a value is found here, then the default is overwritten.",
      "parentUuid": "fa82b9bf_7872fee6",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b86886f6",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Why break is needed here? (you wrote that there\u0027s only one value in this map)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d3f0cbcb",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/AdminConfigManager.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "Applies to related comments, but this code is cut and paste from the method above.",
      "parentUuid": "fa82b9bf_b86886f6",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_730e9f36",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Minor comment. pls change ifName to portName.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f3edcff0",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "OK",
      "parentUuid": "fa82b9bf_730e9f36",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_13f953c8",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "I understand that you added this temporarily for your debugging purposes. But since most of the design review is complete, i think you can remove this for this iteration so that we can get to a cleaner review/merge",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_93ba43e0",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "OK",
      "parentUuid": "fa82b9bf_13f953c8",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d3020bb4",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Shouldnt this be named createIntegrationBridge ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_53b4bbf1",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "The method could eventually do more. This method is like the next, createNetNetwork(), where is tries to set up all the parts needed to set up the integration or network networks.\n\nThis was existing code, but it had a different name that was even more ambiguous so I changed it to be like the other function listed above. Previous name was createInternalNetworkForNeutron.\n\nI can change it though, since it doesn\u0027t do anything else today.",
      "parentUuid": "fa82b9bf_d3020bb4",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_33f6d7d8",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 218,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Shouldnt this be named addIntegrationBridge()",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b3bf47d0",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 218,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "addInternalBridge() is existing code. The method is used to add any bridge to the internalNetwork.",
      "parentUuid": "fa82b9bf_33f6d7d8",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f3ff0fa9",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "Shouldnt this be named createNetBridge ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_73b9bfe8",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "As referenced above, these functions were already name createxxxnetwork or in this case createInternalNetworkForOverlay. The other was createInternalNetworkForNeutron.\n\nWith the compressing of vlan and tunnel bridges into a shared bridge I changed the names to be closer to the bridge name.\n\nThis one is unique in that it does more than just operate on the network bridge. It also adds the patch port on the integration bridge.",
      "parentUuid": "fa82b9bf_f3ff0fa9",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_932c834c",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 11
      },
      "writtenOn": "2014-04-20T21:04:54Z",
      "side": 1,
      "message": "This Vlan network operation is generic for OF1.0 and OF1.3, is it okay to move this outside the if/else condition and make it common for both the cases ?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_13ce3384",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/InternalNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "There is a difference in that for 1.0 the port is added to the provider bridge, whereas 1.3 it is added to the integration bridge: status \u003d addPortToBridge(node, brInt, phyNetName);\n\nA method could be create to pass in the bridge name. This would still require a of version check to determine what bridge name to use. So I don\u0027t thing it makes it more readable or useful.",
      "parentUuid": "fa82b9bf_932c834c",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b84f2692",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/NetworkHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "this file is just logging statements, I understand it\u0027s just temporary for debugging, but you can simply leave it out of the patch by not adding it to the commit. save your reviewers time :)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_78499e8a",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/NodeConfiguration.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Why is this relevant to this patch?\nIf logging improvements are needed, it will be more easy and correct to review them in a separate patch.\n(I saw Chris commented on it as well, so +1 to his comment)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_33cb3774",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/NodeConfiguration.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "Sure. In this case the original comment was plain wrong and threw me every time I read it so I made the change.",
      "parentUuid": "fa82b9bf_78499e8a",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_5844da73",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/NodeConfiguration.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "The method name is not clear. \nIf it removes something, it should be mentioned in its name.\nJavadoc is not the right way to bypass unclear method naming.\n\nAnd how is this Javadoc addition relevant to the patch? (I saw Chris commented on it as well, so +1 to his comment)",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d3c76b63",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/NodeConfiguration.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "This is existing code with my comments added. There is no javadoc in here and as you mention the methods here are not that great, so I added some simple comments as an interim step.\n\nI agree another commit should really clean all this up and get the comments and javadoc in better shape.",
      "parentUuid": "fa82b9bf_5844da73",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_185e5246",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/PortHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "you can just leave this out of the commit, and have it locally for your checks.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_9831020e",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/SouthboundHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "the method \"checkAndCreateNetwork\" does a lot of logic and changes the state of objects. (imagine it could potentially throw an exception inside an if statement  - runtime ex for example ) it\u0027s not a plain true/false condition evaluation.\nIt will be better to execute it first, and then evaluate its value (extract it to a local variable) in an \"if\" statement.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f3c4ef60",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/SouthboundHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "java noob... I will contact you offline to understand how to do this properly.",
      "parentUuid": "fa82b9bf_9831020e",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_d31c4b6d",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "is it ok to have those values hardcoded? don\u0027t they never need to be changed?\nbecause if yes, they should be read from a config file that can be easily changed, rather than having source code changed + compile + redeploy it.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f3194f7a",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "In this method and below in several more methods, first 3-5 lines of code look like a copy paste.\nHow about extracting them to a separate method and reuse it?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_93a1e3ab",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "existing code, except a method name change.\n\nThe new methods down below are as you mention with all the common code moved out to a method. Something similar can be done to these existing methods in a later commit.",
      "parentUuid": "fa82b9bf_f3194f7a",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_9326c3b9",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "What I would do in the 4 methods below is reuse code.\nFor example, have one method constructing \"prefix\"+patchOFPort+fromVlan+toVlan, and passing (possibly from another method or directly from the calling code) every time the parameters and the prefix which is either \"int_mod\" or \"net_mod\".",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b3a667c0",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "they all don\u0027t have the same pattern so there can\u0027t be a single method. There would still need to be more than one method to construct different strings. Unless there is some java magic to do this better.\n\nThe individual methods here are also more readable in the using code.",
      "parentUuid": "fa82b9bf_9326c3b9",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b32bc781",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "What\u0027s the implication of failing to delete a rule? And how the calling code/user is notified that it\u0027s failed if it\u0027s written only to the log?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_3337b7e5",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "There are several methods in this class that do exactly the same - construct and populate FlowConfig.\nPlease consider extracting it to a separate method, populating the defaults there and passing as parameters the things that are different in each case.\nIt will make the methods more readable as well as code reuse \u003d better maintainable code.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_53ab5b89",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "the parts here have slight differences. You could extract 3 or 4 lines to a common header parts of the function.\n\nThe non-common parts would require if/then checks to decide when to apply the fields or not.\n\nUnless you are saying creating the method with different parameter lists to set the different flow.\n\nTo change further than what is hear would seem to complicate the code, though, because the parameter lists would become longer.",
      "parentUuid": "fa82b9bf_3337b7e5",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_53203b9b",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "1. Java classes should start with capital letter.\n\n2. What do you mean by transient class?\n\n3. Why does it have to be an inner class for OF10...?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_73b0dff4",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "The transient comment was because Java doesn\u0027t pass back multiple values in a method return so this class captures the values needed.\n\nOF10ProviderManager needs the values, but they all come from other classes so no single class has the data.\n\nSince the data is needed specifically for this module to use I only created the class here to capture it.\n\nThis could probably be moved to internalNetworkManager as a method since that module contains all the network data and methods.",
      "parentUuid": "fa82b9bf_53203b9b",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_133ab3cd",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 600,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "The names are hard to understand because of all the half words.\nPlease use full words, it will be much easier to read the code.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_73253faa",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 608,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "This is a very long method. Very hard to read, understand and maintain.\nPlease break it to shorter methods.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_934d6375",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 771,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "Because the Java class is incorrectly named, this line looks very strange \nat least for Java people: \n\nvlanNet vlanNet.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_b352e711",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 793,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "I suggest creating a method named \"deleteRules\" and pass all the info there and do the logic there. Much cleaner code.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_1395d33f",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF10ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 793,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "That is what this method is - removeVlanRules. It grabs all the info needed and then calls the simple deleteRule method.\n\nI don\u0027t see much further granularity here.",
      "parentUuid": "fa82b9bf_b352e711",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_3310174e",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF13ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "if this method has no implementation, why it exists and why it needs a signature update?",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_33925758",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/OF13ProviderManager.java",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 773
      },
      "writtenOn": "2014-04-21T15:05:06Z",
      "side": 1,
      "message": "of1.0 and 1.3 extend the ProviderNetworkManager where this method is defined. That changed so this method changed and this module has to implement the method to compile.",
      "parentUuid": "fa82b9bf_3310174e",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_1313935d",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/ProviderNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "I know this code was here prior to the patch, but if you are touching\nthis area, please consider this refactoring in a separate patch:\n\nThis abstract class has only one method - getManager.\nWhich returns its inheriting children.\nSo the abstract class, along with its inheriting classes which all inherit this method, are all well aware of each other. \nIt\u0027s not a correct approach.\nA more correct approach would be to do a factory design pattern (having a factory class) which will\nbe the one to create the instances of the correct class based on\nopen flow version.\n\nAlso, given the fact that getManager is the only method that is implemented\nin this abstract class, what is the gain of its existence versus having\nan interface and having the OF10/Of13 classes implementing directly\nthe interface?\nThis way, the factory will be able to declare as return type the interface itself - much more clean and standard approach.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_f854ce22",
        "filename": "neutron/src/main/java/org/opendaylight/ovsdb/neutron/provider/ProviderNetworkManager.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 739
      },
      "writtenOn": "2014-04-19T17:07:23Z",
      "side": 1,
      "message": "consider having an enum instead of 2 string representing a version of open flow.",
      "revId": "1e7d2a299409dca1b479e965fcca1a33b6e62cf4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}