# This file contains test cases for the OVSDB Northbound API
# The ordering of the test data MUST be as follows:
#   name:
#   operation:
#   uri:
#   json:
#   expected:
#
# The tests are run in the order specified in this file
# The following variables are permitted in the URI or JSON:
#
# ${node} = The node identifier
# ${uuid} = The last UUID returned by a POST operation
# ${bridge_uuid} = The UUID of the test bridge
# ${port_uuid} = The UUID of the test port
---
- name: testGetBridgeRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/bridge/rows
  json:
  expected: 200

- name: testGetPortRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/port/rows
  json:
  expected: 200

- name: testGetInterfaceRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/interface/rows
  json:
  expected: 200

- name: testGetControllerRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/controller/rows
  json:
  expected: 200

- name: testGetSslRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/ssl/rows
  json:
  expected: 200

- name: testGetSflowRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/sflow/rows
  json:
  expected: 200

- name: testGetQosRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/qos/rows
  json:
  expected: 200

- name: testGetQueueRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/queue/rows
  json:
  expected: 200

- name: testGetNetflowRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/netflow/rows
  json:
  expected: 200

- name: testGetManagerRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/manager/rows
  json:
  expected: 200

- name: testGetOpenVswitchRows
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/open_vswitch/rows
  json:
  expected: 200

# Bridge

- name: testCreateBridge
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/bridge/rows
  json: >
    {
      "row": {
        "Bridge": {
        "name": "bridge1",
        "datapath_type": "OPENFLOW"
        }
     }
    }
  expected: 201

- name: testGetBridgeRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/bridge/rows/${uuid}
  json:
  expected: 200

- name: testUpdateBridgeRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/bridge/rows/${uuid}
  json: >
    {
      "row": {
        "Bridge": {
          "stp_enable": true
        }
     }
    }
  expected: 200

# Port

- name: testCreatePort
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/port/rows
  json: >
    {
      "parent_uuid":"${bridge_uuid}",
        "row":{
          "Port":{
            "name":"testPort1"
          }
        }
    }
  expected: 201

- name: testGetPortRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/port/rows/${uuid}
  json:
  expected: 200

- name: testUpdatePortRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/port/rows/${uuid}
  json: >
    {
       "row": {
         "Port": {
            "fake_bridge": true
         }
       }
    }
  expected: 200

# Interface

- name: testCreateInteface
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/interface/rows
  json: >
    {
      "parent_uuid": "${port_uuid}",
        "row":{
          "Interface":{
            "name":"testInterface",
            "admin_state":"up"
        }
      }
    }
  expected: 201

- name: testGetInterfaceRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/interface/rows/${uuid}
  json:
  expected: 200

- name: testUpdateInterfaceRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/interface/rows/${uuid}
  json: >
    {
      "row":{
        "Interface":{
          "type": "gre"
        }
      }
    }
  expected: 200

- name: testDeleteInterfaceRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/interface/rows/${uuid}
  json:
  expected: 204

# Controller

- name: testCreateController
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/controller/rows
  json: >
    {
      "parent_uuid" : "${bridge_uuid}",
      "row" : {
        "Controller": {
          "target": "1.1.1.1"
            }
        }
    }
  expected: 201

- name: testGetControllerRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/controller/rows/${uuid}
  json:
  expected: 200

- name: testUpdateControllerRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/controller/rows/${uuid}
  json: >
    {
      "row":{
        "Controller":{
          "is_connected": false
        }
      }
    }
  expected: 200

- name: testDeleteControllerRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/controller/rows/${uuid}
  json:
  expected: 204

# SSL

- name: testCreateSslRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/ssl/rows
  json: >
    {
        "row":{
          "SSL":{
            "name":"mySSL",
            "ca_cert" : "ca_cert",
            "bootstrap_ca_cert" : true,
            "certificate":"pieceofpaper",
            "private_key" : "private"
          }
        }
    }
  expected: 201

- name: testGetSslRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/ssl/rows/${uuid}
  json:
  expected: 200

- name: testUpdateSslRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/ssl/rows/${uuid}
  json: >
    {
      "row":{
        "SSL":{
          "private_key" : "secret"
        }
      }
    }
  expected: 200

- name: testDeleteSslRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/ssl/rows/${uuid}
  json:
  expected: 204

# sFlow

- name: testCreateSflowRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/sflow/rows
  json: >
    {
      "parent_uuid": "${bridge_uuid}",
      "row": {
        "sFlow": {
          "targets": [
            "set",
            [
              "targets_string"
            ]
          ]
        }
      }
    }
  expected: 201

- name: testGetSflowRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/sflow/rows/${uuid}
  json:
  expected: 200

- name: testUpdateSflowRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/sflow/rows/${uuid}
  json: >
    {
      "row":{
        "sFlow":{
          "targets": [
            "set",
            [
              "targets_string",
              "second_target"
            ]
          ]
        }
      }
    }
  expected: 200

- name: testDeleteSflowRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/sflow/rows/${uuid}
  json:
  expected: 204

# QoS

- name: testCreateQosRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/qos/rows
  json: >
    {
      "parent_uuid" : "${port_uuid}",
      "row" : {
        "QoS": {
          "type": "linux-htb"
        }
      }
    }
  expected: 201

- name: testGetQosRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/qos/rows/${uuid}
  json:
  expected: 200

- name: testUpdateQosRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/qos/rows/${uuid}
  json: >
    {
      "row":{
        "QoS":{
          "type": "linux-hfsc"
        }
      }
    }
  expected: 200

# Queue

- name: testCreateQueueRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/queue/rows
  json: >
    {
      "parent_uuid": "${qos_uuid}",
      "row": {
        "Queue": {
          "dscp" : [
          "set",
          [
              25
            ]
          ]
        }
      }
    }
  expected: 201

- name: testGetQueueRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/queue/rows/${uuid}
  json:
  expected: 200

- name: testUpdateQueueRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/queue/rows/${uuid}
  json: >
    {
      "row":{
        "Queue":{
          "other_config" : [
            "map", ["foo", "bar" ]
          ]
        }
      }
    }
  expected: 200

- name: testDeleteQueueRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/queue/rows/${uuid}
  json:
  expected: 204

# NetFlow

- name: testCreateNetflowRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/netflow/rows
  json: >
    {
      "parent_uuid":"${bridge_uuid}",
      "row" : {
        "NetFlow":{
          "targets" : [
            "set", ["192.168.1.102:9998"]],
          "active_timeout" : "0"
          }
      }
    }
  expected: 201

- name: testGetNetflowRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/netflow/rows/${uuid}
  json:
  expected: 200

- name: testUpdateNetflowRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/netflow/rows/${uuid}
  json: >
    {
      "row" : {
        "NetFlow":{
          "targets" : [
            "set", ["192.168.1.102:9998", "192.168.2.102:9998"]]
          }
      }
    }
  expected: 200

- name: testDeleteNetflowRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/netflow/rows/${uuid}
  json:
  expected: 204

# Manager

- name: testCreateManagerRow
  operation: POST
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/manager/rows
  json: >
    {
      "parent_uuid":"${ovs_uuid}",
        "row":{
          "Manager":{
            "target":"a_string",
            "is_connected": true,
            "state":"active"
          }
        }
    }
  expected: 201

- name: testGetManagerRow
  operation: GET
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/manager/rows/${uuid}
  json:
  expected: 200

- name: testUpdateManagerRow
  operation: PUT
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/manager/rows/${uuid}
  json: >
    {
        "row":{
          "Manager":{
            "is_connected": false
          }
        }
    }
  expected: 200

- name: testDeleteManagerRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/manager/rows/${uuid}
  json:
  expected: 204

# Cleanup

- name: testDeleteQosRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/qos/rows/${qos_uuid}
  json:
  expected: 204

- name: testDeletePortRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/port/rows/${port_uuid}
  json:
  expected: 204

- name: testDeleteBridgeRow
  operation: DELETE
  uri: /ovsdb/nb/v2/node/OVS/${node}/tables/bridge/rows/${bridge_uuid}
  json:
  expected: 204
